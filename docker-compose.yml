version: '3'

networks:
  public: {}
  private: {}

volumes:
  grafana_lib: {}
  grafana_ds: 

services:
  influxdb:
    image: influxdb:alpine
    container_name: influxdb
    ports:
      - "8086:8086"
    networks:
      - public
      - private
    volumes:
      - ./data/influxdb:/var/lib/influxdb
    environment:
      INFLUXDB_REPORTING_DISABLED: "true"
      INFLUXDB_DB: telegraf
      INFLUXDB_USER: telegraf
      INFLUXDB_USER_PASSWORD: nimda321

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - 3000:3000
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=grafana
    volumes:
      - ./grafana:/etc/grafana/provisioning/datasources
volumes:
  prom_data:
        
  telegraf:
    image: telegraf:latest
    container_name: telegraf
    network_mode: "host"
    volumes:
      - ./telegraf.conf:/etc/telegraf/telegraf.conf:ro
    environment:
      # real influx host
      INFLUXDB_URI: "http://localhost:8086"

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - 9090:9090
    restart: unless-stopped
    volumes:
      - ./prometheus:/etc/prometheus
      - prom_data:/prometheus

  node_exporter:
    image: prom/node-exporter:latest
    container_name: node_exporter
    volumes:
      - ${PWD}/node_exporter/justrun.py:/justrun.py:rw
      - ${PWD}/node_exporter/hmon:/hmon:rw
      - ${PWD}/node_exporter/smoothlogging:/smoothlogging:rw
      - ${PWD}/node_exporter/textfile_collector:/var/lib/node_exporter/textfile_collector/
    networks:
      - public
      - private
    environment:
      DOGSNAME:      "GULA,BODKA"
    expose:
      - 9100
    ports:
      - 9101:9100

  cadvisor:
    image: google/cadvisor:latest
    container_name: cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /cgroup:/cgroup:ro #doesn't work on MacOS only for Linux
    restart: unless-stopped
    expose:
      - 8080
    networks:
      - private
      - public
    labels:
      org.label-schema.group: "monitoring"

  alertmanager:
    image: prom/alertmanager
    container_name: alertmanager
    ports:
      - 9093:9093
    volumes:
      - ./alertmanager/:/etc/alertmanager/
    networks:
      - private
    restart: unless-stopped
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
